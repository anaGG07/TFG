services:
  eyra-proxy:
    image: nginx:1.25-alpine
    container_name: eyra-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/mime.types:/etc/nginx/mime.types
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./certbot-webroot:/usr/share/nginx/html/.well-known/acme-challenge
      - /etc/letsencrypt/archive:/etc/letsencrypt/archive:ro
      - /etc/letsencrypt/renewal:/etc/letsencrypt/renewal:ro

    depends_on:
      - eyra-api
      - eyra-web
    networks:
      - eyra-network

  eyra-web:
    build:
      context: ./eyra-frontend
      dockerfile: Dockerfile
      target: production
    container_name: eyra-web
    expose:
      - "80"
    networks:
      - eyra-network

  eyra-api:
    build:
      context: ./eyra-backend
      dockerfile: Dockerfile
      args:
        - APP_ENV=${APP_ENV}
    container_name: eyra-api
    expose:
      - "9000"
    volumes:
      - ./eyra-backend:/var/www/html
      - ./eyra-backend/config/jwt:/var/www/html/config/jwt
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - APP_ENV=${APP_ENV}
      - APP_SECRET=${APP_SECRET}
      - JWT_SECRET_KEY=/var/www/html/config/jwt/private.pem
      - JWT_PUBLIC_KEY=/var/www/html/config/jwt/public.pem
      - INSTALL_DEPS=false
      - SET_PERMISSIONS=false
      - RUN_MIGRATIONS=false
      - CLEAR_CACHE=false
    networks:
      - eyra-network

  eyra-db:
    image: postgres:16-alpine
    container_name: eyra-db
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - eyra-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  eyra-network:
    driver: bridge

volumes:
  postgres_data:
