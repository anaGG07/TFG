# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    cookie_secure: '%env(bool:COOKIE_SECURE)%'

services:
    Symfony\Component\Security\Core\Security:
        alias: security.helper

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Registrar el extractor de token desde cookie
    App\Security\CookieTokenExtractor:
        arguments:
            $cookieName: 'jwt_token'
            $logger: '@logger'
        tags:
            - { name: 'lexik_jwt_authentication.token_extractor', alias: 'cookie_extractor' }

    # Handler personalizado para autenticación con cookies
    App\Security\JwtCookieSuccessHandler:
        arguments:
            $cookieSecure: '%cookie_secure%'

    # Listener para depurar autenticación
    App\EventListener\AuthenticationDebugListener:
        tags:
            - { name: kernel.event_subscriber }

    # Listener para convertir cookies JWT en headers de Authorization    
    App\EventListener\JwtCookieListener:
        arguments:
            $logger: '@logger'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 999 }

    # Listener para eventos de autenticación JWT
    App\EventListener\JwtAuthenticationListener:
        arguments:
            $logger: '@logger'
            $requestStack: '@request_stack'
        tags:
            - { name: kernel.event_listener, event: security.authentication.failure, method: onAuthenticationFailure }